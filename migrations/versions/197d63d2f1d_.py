"""empty message

Revision ID: 197d63d2f1d
Revises: None
Create Date: 2015-05-15 22:26:11.897065

"""

# revision identifiers, used by Alembic.
revision = '197d63d2f1d'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gender',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('language',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('login',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('password_salt', sa.String(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schoolfaculty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('business',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('location_longitude', sa.Float(), nullable=False),
    sa.Column('location_latitude', sa.Float(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('home_address', sa.String(), nullable=True),
    sa.Column('home_latitude', sa.Float(), nullable=False),
    sa.Column('home_longitude', sa.Float(), nullable=False),
    sa.Column('home_city', sa.String(), nullable=False),
    sa.Column('gender_id', sa.Integer(), nullable=True),
    sa.Column('login_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], ),
    sa.ForeignKeyConstraint(['login_id'], ['login.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender_id', sa.Integer(), nullable=True),
    sa.Column('login_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], ),
    sa.ForeignKeyConstraint(['login_id'], ['login.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experience',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], ),
    sa.PrimaryKeyConstraint('employee_id', 'industry_id')
    )
    op.create_table('languageset',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.PrimaryKeyConstraint('language_id', 'employee_id')
    )
    op.create_table('manager_set',
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('manager_set_name', sa.String(), nullable=False),
    sa.Column('manager_set_level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], ),
    sa.PrimaryKeyConstraint('manager_id', 'business_id')
    )
    op.create_table('position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('create_date', sa.Date(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rank',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], ),
    sa.PrimaryKeyConstraint('employee_id', 'industry_id')
    )
    op.create_table('job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('salary', sa.Float(), nullable=True),
    sa.Column('details', sa.String(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('application_deadline', sa.DateTime(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job')
    op.drop_table('rank')
    op.drop_table('position')
    op.drop_table('manager_set')
    op.drop_table('languageset')
    op.drop_table('experience')
    op.drop_table('manager')
    op.drop_table('employee')
    op.drop_table('business')
    op.drop_table('schoolfaculty')
    op.drop_table('login')
    op.drop_table('language')
    op.drop_table('industry')
    op.drop_table('gender')
    op.drop_table('company')
    op.drop_table('availability')
    ### end Alembic commands ###
