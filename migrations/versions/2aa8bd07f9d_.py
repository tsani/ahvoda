"""initialize database

The old Ahvoda database structure was impossible to upgrade to the new
constraint naming scheme, so rather than bust my ass figuring out how to
migrate it, I just dropped the database.

Revision ID: 2aa8bd07f9d
Revises: None
Create Date: 2015-07-02 02:21:27.011872

"""

# revision identifiers, used by Alembic.
revision = '2aa8bd07f9d'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company'))
    )
    op.create_table('contactinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('email_address', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contactinfo')),
    sa.UniqueConstraint('id', name=op.f('uq_contactinfo_id'))
    )
    op.create_table('country',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_country'))
    )
    op.create_table('gender',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gender'))
    )
    op.create_table('industry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_industry'))
    )
    op.create_table('jobstatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('friendly_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_jobstatus')),
    sa.UniqueConstraint('id', name=op.f('uq_jobstatus_id')),
    sa.UniqueConstraint('name', name=op.f('uq_jobstatus_name'))
    )
    op.create_table('language',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('iso_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_language')),
    sa.UniqueConstraint('iso_name', name=op.f('uq_language_iso_name'))
    )
    op.create_table('login',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('password_salt', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_login')),
    sa.UniqueConstraint('username', name=op.f('uq_login_username'))
    )
    op.create_table('rating',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_rating', sa.Float(), nullable=False),
    sa.Column('employee_comment', sa.String(), nullable=True),
    sa.Column('job_rating', sa.Float(), nullable=False),
    sa.Column('job_comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rating')),
    sa.UniqueConstraint('id', name=op.f('uq_rating_id'))
    )
    op.create_table('administrator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['login_id'], ['login.id'], name=op.f('fk_administrator_login_id_login'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_administrator')),
    sa.UniqueConstraint('login_id', name=op.f('uq_administrator_login_id'))
    )
    op.create_table('human',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender_id', sa.Integer(), nullable=True),
    sa.Column('contact_info_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_info_id'], ['contactinfo.id'], name=op.f('fk_human_contact_info_id_contactinfo')),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], name=op.f('fk_human_gender_id_gender')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_human')),
    sa.UniqueConstraint('id', name=op.f('uq_human_id'))
    )
    op.create_table('state',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], name=op.f('fk_state_country_id_country')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_state'))
    )
    op.create_table('city',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['state.id'], name=op.f('fk_city_state_id_state')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_city'))
    )
    op.create_table('manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('human_id', sa.Integer(), nullable=False),
    sa.Column('login_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['human_id'], ['human.id'], name=op.f('fk_manager_human_id_human')),
    sa.ForeignKeyConstraint(['login_id'], ['login.id'], name=op.f('fk_manager_login_id_login'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_manager')),
    sa.UniqueConstraint('human_id', name=op.f('uq_manager_human_id')),
    sa.UniqueConstraint('login_id', name=op.f('uq_manager_login_id'))
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], name=op.f('fk_location_city_id_city')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location'))
    )
    op.create_table('business',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('contact_info_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name=op.f('fk_business_company_id_company')),
    sa.ForeignKeyConstraint(['contact_info_id'], ['contactinfo.id'], name=op.f('fk_business_contact_info_id_contactinfo')),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], name=op.f('fk_business_industry_id_industry')),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_business_location_id_location')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business'))
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login_id', sa.Integer(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('human_id', sa.Integer(), nullable=False),
    sa.Column('home_location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['home_location_id'], ['location.id'], name=op.f('fk_employee_home_location_id_location')),
    sa.ForeignKeyConstraint(['human_id'], ['human.id'], name=op.f('fk_employee_human_id_human')),
    sa.ForeignKeyConstraint(['login_id'], ['login.id'], name=op.f('fk_employee_login_id_login'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_employee')),
    sa.UniqueConstraint('human_id', name=op.f('uq_employee_human_id')),
    sa.UniqueConstraint('login_id', name=op.f('uq_employee_login_id'))
    )
    op.create_table('businesslanguageset',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_businesslanguageset_business_id_business'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], name=op.f('fk_businesslanguageset_language_id_language'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('language_id', 'business_id', name=op.f('pk_businesslanguageset'))
    )
    op.create_table('employeelanguageset',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], name=op.f('fk_employeelanguageset_employee_id_employee'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], name=op.f('fk_employeelanguageset_language_id_language'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('language_id', 'employee_id', name=op.f('pk_employeelanguageset'))
    )
    op.create_table('managerset',
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_managerset_business_id_business'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], name=op.f('fk_managerset_manager_id_manager'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('manager_id', 'business_id', name=op.f('pk_managerset'))
    )
    op.create_table('position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('create_date', sa.Date(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_available', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_position_business_id_business')),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], name=op.f('fk_position_manager_id_manager'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_position'))
    )
    op.create_table('job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pay', sa.Float(), nullable=False),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('arrival_date', sa.DateTime(), nullable=True),
    sa.Column('departure_date', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('rating_id', sa.Integer(), nullable=True),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name=op.f('fk_job_business_id_business')),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], name=op.f('fk_job_employee_id_employee'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], name=op.f('fk_job_manager_id_manager'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], name=op.f('fk_job_position_id_position')),
    sa.ForeignKeyConstraint(['rating_id'], ['rating.id'], name=op.f('fk_job_rating_id_rating')),
    sa.ForeignKeyConstraint(['status_id'], ['jobstatus.id'], name=op.f('fk_job_status_id_jobstatus')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_job'))
    )
    op.create_table('applicant',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], name=op.f('fk_applicant_employee_id_employee'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('fk_applicant_job_id_job'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id', 'job_id', name=op.f('pk_applicant'))
    )
    op.create_table('joblanguageset',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('fk_joblanguageset_job_id_job'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], name=op.f('fk_joblanguageset_language_id_language'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('language_id', 'job_id', name=op.f('pk_joblanguageset'))
    )
    op.create_table('jobmatch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_dispatched', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('is_true_match', sa.Boolean(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], name=op.f('fk_jobmatch_employee_id_employee')),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], name=op.f('fk_jobmatch_job_id_job')),
    sa.PrimaryKeyConstraint('employee_id', 'job_id', name=op.f('pk_jobmatch')),
    sa.UniqueConstraint('id', name=op.f('uq_jobmatch_id'))
    )
    op.create_index(op.f('ix_jobmatch_is_dispatched'), 'jobmatch', ['is_dispatched'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jobmatch_is_dispatched'), table_name='jobmatch')
    op.drop_table('jobmatch')
    op.drop_table('joblanguageset')
    op.drop_table('applicant')
    op.drop_table('job')
    op.drop_table('position')
    op.drop_table('managerset')
    op.drop_table('employeelanguageset')
    op.drop_table('businesslanguageset')
    op.drop_table('employee')
    op.drop_table('business')
    op.drop_table('location')
    op.drop_table('manager')
    op.drop_table('city')
    op.drop_table('state')
    op.drop_table('human')
    op.drop_table('administrator')
    op.drop_table('rating')
    op.drop_table('login')
    op.drop_table('language')
    op.drop_table('jobstatus')
    op.drop_table('industry')
    op.drop_table('gender')
    op.drop_table('country')
    op.drop_table('contactinfo')
    op.drop_table('company')
    ### end Alembic commands ###
