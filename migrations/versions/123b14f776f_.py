"""empty message

Revision ID: 123b14f776f
Revises: 11339497eca
Create Date: 2015-05-29 17:05:33.694978

"""

# revision identifiers, used by Alembic.
revision = '123b14f776f'
down_revision = '11339497eca'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('businesslocationset',
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('business_id', 'location_id')
    )
    op.create_table('city',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('country',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employeelocationset',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('employee_id', 'location_id')
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employeelanguageset',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('language_id', 'employee_id')
    )
    op.create_table('managerset',
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('business_id', sa.Integer(), nullable=False),
    sa.Column('manager_set_name', sa.String(), nullable=False),
    sa.Column('manager_set_level', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('manager_id', 'business_id')
    )
    op.create_table('joblanguageset',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('language_id', 'job_id')
    )
    op.create_table('rating',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('employee_rating', sa.Float(), nullable=False),
    sa.Column('employee_comment', sa.String(), nullable=True),
    sa.Column('job_rating', sa.Float(), nullable=False),
    sa.Column('job_comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.alter_column('employee', 'birth_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint('employee_faculty_id_fkey', 'employee', type_='foreignkey')
    op.drop_column('employee', 'home_longitude')
    op.drop_column('employee', 'faculty_id')
    op.drop_column('employee', 'cv_original_name')
    op.drop_column('employee', 'graduation_year')
    op.drop_column('employee', 'home_address')
    op.drop_column('employee', 'is_student')
    op.drop_column('employee', 'home_city')
    op.drop_column('employee', 'canadian_work')
    op.drop_column('employee', 'home_latitude')
    op.drop_column('employee', 'canadian_citizen')
    op.drop_column('employee', 'cv_name')
    op.drop_table('rank')
    op.drop_table('experience')
    op.drop_table('schoolfaculty')
    op.drop_table('manager_set')
    op.drop_table('languageset')
    op.drop_table('availability')
    op.add_column('job', sa.Column('date', sa.DateTime(), nullable=False))
    op.add_column('job', sa.Column('pay', sa.Float(), nullable=False))
    op.alter_column('job', 'details',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('job', 'end_date')
    op.drop_column('job', 'salary')
    op.drop_column('job', 'start_date')
    op.drop_column('job', 'application_deadline')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job', sa.Column('application_deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('salary', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('job', sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('job', 'details',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('job', 'pay')
    op.drop_column('job', 'date')
    op.add_column('employee', sa.Column('cv_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('canadian_citizen', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('home_latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('canadian_work', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('home_city', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('is_student', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('home_address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('employee', sa.Column('graduation_year', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('employee', sa.Column('cv_original_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('faculty_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('employee', sa.Column('home_longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.create_foreign_key('employee_faculty_id_fkey', 'employee', 'schoolfaculty', ['faculty_id'], ['id'])
    op.alter_column('employee', 'birth_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_table('availability',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='availability_pkey')
    )
    op.create_table('languageset',
    sa.Column('language_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], name='languageset_employee_id_fkey'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], name='languageset_language_id_fkey'),
    sa.PrimaryKeyConstraint('language_id', 'employee_id', name='languageset_pkey')
    )
    op.create_table('manager_set',
    sa.Column('manager_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('business_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('manager_set_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('manager_set_level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['business.id'], name='manager_set_business_id_fkey'),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], name='manager_set_manager_id_fkey'),
    sa.PrimaryKeyConstraint('manager_id', 'business_id', name='manager_set_pkey')
    )
    op.create_table('schoolfaculty',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('schoolfaculty_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='schoolfaculty_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('experience',
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('industry_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], name='experience_employee_id_fkey'),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], name='experience_industry_id_fkey'),
    sa.PrimaryKeyConstraint('employee_id', 'industry_id', name='experience_pkey')
    )
    op.create_table('rank',
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('industry_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], name='rank_employee_id_fkey'),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], name='rank_industry_id_fkey'),
    sa.PrimaryKeyConstraint('employee_id', 'industry_id', name='rank_pkey')
    )
    op.drop_table('rating')
    op.drop_table('joblanguageset')
    op.drop_table('managerset')
    op.drop_table('employeelanguageset')
    op.drop_table('location')
    op.drop_table('employeelocationset')
    op.drop_table('country')
    op.drop_table('city')
    op.drop_table('businesslocationset')
    ### end Alembic commands ###
