"""add administrator accounts, partly refactor Employee/Manager into Human.

The common information stored on both Employees and Managers is refactored into
a Human table in a one-to-one connection with both Employee and Manager.

Unique constraints are added on:

* Login.username
* Employee.human_id
* Employee.login_id
* Manager.human_id
* Manager.login_id

which will speed up database lookups

Revision ID: 14752bd249b
Revises: 4b2b40a8201
Create Date: 2015-06-22 15:49:32.500111

"""

# revision identifiers, used by Alembic.
revision = '14752bd249b'
down_revision = '4b2b40a8201'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('administrator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['login_id'], ['login.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login_id')
    )
    op.create_table('human',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.add_column('employee', sa.Column('human_id', sa.Integer(), nullable=False))
    op.create_unique_constraint('employee_login_id_unique', 'employee', ['login_id'])
    op.create_unique_constraint('employee_human_id_unique', 'employee', ['human_id'])
    op.drop_constraint('employee_gender_id_fkey', 'employee', type_='foreignkey')
    op.create_foreign_key('employee_human_id_fkey', 'employee', 'human', ['human_id'], ['id'])
    op.drop_column('employee', 'gender_id')
    op.drop_column('employee', 'first_name')
    op.drop_column('employee', 'birth_date')
    op.drop_column('employee', 'last_name')
    op.create_unique_constraint('login_username_unique', 'login', ['username'])
    op.add_column('manager', sa.Column('human_id', sa.Integer(), nullable=False))
    op.create_unique_constraint('manager_login_id_unique', 'manager', ['login_id'])
    op.create_unique_constraint('manager_human_id_unique', 'manager', ['human_id'])
    op.drop_constraint('manager_gender_id_fkey', 'manager', type_='foreignkey')
    op.create_foreign_key('manager_human_id_fkey', 'manager', 'human', ['human_id'], ['id'])
    op.drop_column('manager', 'gender_id')
    op.drop_column('manager', 'first_name')
    op.drop_column('manager', 'birth_date')
    op.drop_column('manager', 'last_name')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('manager', sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('manager', sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('manager', sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('manager', sa.Column('gender_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('manager_human_id_fkey', 'manager', type_='foreignkey')
    op.create_foreign_key('manager_gender_id_fkey', 'manager', 'gender', ['gender_id'], ['id'])
    op.drop_constraint('manager_human_id_unique', 'manager', type_='unique')
    op.drop_constraint('manager_login_id_unique', 'manager', type_='unique')
    op.drop_column('manager', 'human_id')
    op.drop_constraint('login_username_unique', 'login', type_='unique')
    op.add_column('employee', sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('birth_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('employee', sa.Column('gender_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint('employee_human_id_fkey', 'employee', type_='foreignkey')
    op.create_foreign_key('employee_gender_id_fkey', 'employee', 'gender', ['gender_id'], ['id'])
    op.drop_constraint('employee_human_id_unique', 'employee', type_='unique')
    op.drop_constraint('employee_login_id_unique', 'employee', type_='unique')
    op.drop_column('employee', 'human_id')
    op.drop_table('human')
    op.drop_table('administrator')
    ### end Alembic commands ###
