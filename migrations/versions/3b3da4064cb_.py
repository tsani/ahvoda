"""add `is_available` to many tables, so rows can be marked deleted

We don't want end-users to actually be able to delete database rows, as this
can damage the integrity of the database. For instance, if a Business is
deleted, then all foreign keys referring to it stop being useful, yet we need
them for various reasons. Instead, we introduce `is_available`, which allows us
to mark rows as deleted on the application layer. These rows usually won't show
up in result sets unless they're used in joins, which is exactly the case we
want to preserve.

Note that in most cases, we have ON DELETE RESTRICT or ON DELETE CASCADE
(especially in association tables), so the deletes won't go through if we don't
want them to or the deletes will kill everything (because the associated data
is unimportant), respectively.

The following tables have been given an `is_available` column:

    * Business
    * Company
    * Job
    * Login

Position already had an `is_available` column, which is where the idea came
from.

The `is_available` column for Login serves as a proxy for an `is_available`
column on its associated account table -- Manager, Employee, or Administrator.
The upshot of this is that those account tables can essentially also be marked
as deleted, and can be made to not appear in the result sets for direct queries
to those collections.

Revision ID: 3b3da4064cb
Revises: 27128ddffde
Create Date: 2015-07-23 09:45:21.559593

"""

# revision identifiers, used by Alembic.
revision = '3b3da4064cb'
down_revision = '27128ddffde'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('business', sa.Column('is_available', sa.Boolean(), server_default='t', nullable=False))
    op.add_column('company', sa.Column('is_available', sa.Boolean(), server_default='t', nullable=False))
    op.add_column('job', sa.Column('is_available', sa.Boolean(), server_default='t', nullable=False))
    op.add_column('login', sa.Column('is_available', sa.Boolean(), server_default='t', nullable=False))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('login', 'is_available')
    op.drop_column('job', 'is_available')
    op.drop_column('company', 'is_available')
    op.drop_column('business', 'is_available')
    ### end Alembic commands ###
