"""remove useless `*LocationSet` tables, revise `Job` and `ManagerSet` tables

* Business and Employee tables are instead linked directly to rows in the
  Location table.
* Remove redundant `date` column from `Job` table; it is replaced with the
  `start_date` column.
* Adjust names of columns in `ManagerSet` table.

Revision ID: dcf7acac9d
Revises: 4dc92ef8417
Create Date: 2015-06-17 17:47:24.818651

"""

# revision identifiers, used by Alembic.
revision = 'dcf7acac9d'
down_revision = '4dc92ef8417'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employeelocationset')
    op.drop_table('businesslocationset')
    op.add_column('business', sa.Column('location_id', sa.Integer(), nullable=False))
    op.create_foreign_key('business_location_id_fkey', 'business', 'location', ['location_id'], ['id'])
    op.drop_column('business', 'location_longitude')
    op.drop_column('business', 'location_latitude')
    op.add_column('employee', sa.Column('home_location_id', sa.Integer(), nullable=False))
    op.create_foreign_key('employee_home_location_id_fkey', 'employee', 'location', ['home_location_id'], ['id'])
    op.drop_column('job', 'date')
    op.create_unique_constraint('jobstatus_id_unique', 'jobstatus', ['id'])
    op.add_column('managerset', sa.Column('level', sa.Integer(), nullable=False))
    op.add_column('managerset', sa.Column('name', sa.String(), nullable=False))
    op.drop_column('managerset', 'manager_set_level')
    op.drop_column('managerset', 'manager_set_name')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('managerset', sa.Column('manager_set_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('managerset', sa.Column('manager_set_level', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('managerset', 'name')
    op.drop_column('managerset', 'level')
    op.drop_constraint('jobstatus_id_unique', 'jobstatus', type_='unique')
    op.add_column('job', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint('employee_home_location_id_fkey', 'employee', type_='foreignkey')
    op.drop_column('employee', 'home_location_id')
    op.add_column('business', sa.Column('location_latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('business', sa.Column('location_longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_constraint('business_location_id_fkey', 'business', type_='foreignkey')
    op.drop_column('business', 'location_id')
    op.create_table('businesslocationset',
    sa.Column('business_id', sa.INTEGER(), nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('business_id', 'location_id', name='businesslocationset_pkey')
    )
    op.create_table('employeelocationset',
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('employee_id', 'location_id', name='employeelocationset_pkey')
    )
    ### end Alembic commands ###
