@import url(http://fonts.googleapis.com/css?family=Open+Sans:300,400|Merriweather:300,400,700);

@import "colors.less";
@import "prefixes.less";

/* The size for mobile devices. When the screen width is smaller that this,
text becomes smaller and some other effects activate.
*/
@mobile-size: 600px;

/* The size that triggers nav collapsing, specifically changing the nav from
being a row layout into a column layout to better suit mobile devices.
*/
@nav-collapse-width: 800px;

* {
    box-sizing: border-box;
}

html {
    height: 100%;
    width: 100%;
}

body {
    margin: 0; /* Pesky browsers, putting margins on body... */
    padding: 0;
    height: 100%;
    width: 100%;
    background-color: white;
    color: @fg-main;
    font-family: "Open Sans", sans;
    z-index: 0;
    line-height: 1.45em;
    font-size: 14px;
    overflow-x: hidden;
    position: relative;

    * {
        z-index: 1;
    }
}

h1, h2, h3, h4, h5, h6 {
    font-family: "Open Sans", sans;
    line-height: 1.2em;
    font-weight: bold;
}

h1 {
    font-size: 200%;
}

h2 {
    font-size: 175%;
}

h3 {
    font-size: 150%;
}

h4 {
    font-size: 135%;
}

h5 {
    font-size: 115%;
}

h6 {
    font-size: 100%;
}

ul {
    li {
        list-style-type: none;
    }
}

/* Usable on a (sized) container such that its contents align in the total
 * center.
 */
.total-centering {
    .display-flex();
    .flex-nowrap();
    .flex-direction(column);
    .justify-content(center);
    .align-items(center);
}

.uniform-shadow(@color, @type : ~"") {
    box-shadow: @type 0 0 5px @color;
}

.dark-gray-shadow(@type : ~"") {
    .uniform-shadow(@nice-gray, @type);
}

.light-gray-shadow(@type : ~"") {
    .uniform-shadow(#aaa, @type);
}

.enshadow(@type : ~"") {
    box-shadow: @type 0 0 0px transparent;
    transition: box-shadow 0.15s ease-in-out;
}

.button {
    &.block {
        display: inline-block;
    }

    cursor: pointer;
    text-decoration: none;
    white-space: nowrap;
    color: inherit;
    padding: 0.5em 1em;
    border-radius: 5px;
    border: 1px solid @nice-gray;
    background-color: rgba(255, 255, 255, 0.8);
    .enshadow();

    &:hover {
        .dark-gray-shadow();
    }
}

.ng-invalid.ng-dirty:not(form) {
    .uniform-shadow(#a00, inset);
}

form {
    &.ng-invalid.ng-dirty {
        button[type='submit'] {
            background-color: #caa;
        }
    }

    &.ng-valid.ng-dirty {
        button[type='submit'] {
            background-color: #aca;
        }
    }
}

button {
    .button();
    cursor: pointer;
}

button[disabled='disabled'] {
        background-color: #caa;
}

.formly-field {
    margin: 0.5em initial;
}

.form-control() {
    color: @nice-gray;
    background-color: white;
    border: 1px solid @nice-gray;
    margin: 0.25em 0;
    padding: 0.5em 1em;
    outline: none;

    .enshadow();
    &:hover {
        .light-gray-shadow(inset);
    }
    &:focus {
        .dark-gray-shadow(inset);
    }
}

input[type='text'], input[type='password'], input[type='number'],
input[type='email'], input[type='tel'], textarea, select {
    .form-control();

    form.separate-form & {
        display: block;
    }

    form.fullwidth & {
        width: 100%;
    }
}

select {
    option {
        padding: 0.25em;
        border: none;
    }
}

dl {
    dt {
        text-align: left;
    }

    dd {
        margin: 0;
        margin-bottom: 0.5em;
    }
}

ul {
    padding-left: 1em;
    text-align: left;
    list-style-type: none;
}

/* Elements with this class will fade in when they enter the viewport. */
.scrollfade {
    opacity: 0;
}

/* Class given to errors in submitting forms. */
.errors {
    color: @sol-red;
    margin-bottom: 1.5em;
}

/* block elements whose purpose is to hold a single element in the center. */
.center-holder {
    display: block;
    text-align: center;
}

/* "flatten" a <ul>, removing the indentation of its children. */
ul.flat {
    margin: 0;
    padding-left: 0;
}

.semiblack-bg {
    background-color: @semiblack-bg;
}

.semiwhite-bg {
    background-color: @semiwhite-bg;
}

#footer {
    border-top: 1px solid @nice-gray;
    width: 100%;
    height: 4vh;
    min-height: 5vh;
    bottom: 100%;
    text-align: center;
    .display-flex();
    .flex-direction(column);
    .flex-nowrap();
    .flex-nowrap();
    .flex-direction(column);
    .justify-content(center);

    p {
        margin: 0;
    }
}

.sc {
    font-variant: small-caps;
}

#top-bar {
    .display-flex();
    .flex-direction(row);
    .flex-wrap(wrap);
    .justify-content(space-around);
    .align-items(center);
    width: 100%;
    border-bottom: 1px solid @nice-gray;
    background-color: white;

    /* Tags in the top bar should have centered text/content. 
     * This is overridden by :first-child and :last-child selectors below. */
    text-align: center;

    > * {
        width: 30%;
        min-width: 266px;
        padding: 0.5em;
        margin: 0;
    }

    a {
        white-space: nowrap;
        .button();
        display: inline-block;
    }

    img.logo {
        max-height: 5em;
    }

    .left, .right {
        .display-flex();
        .flex-direction(row);
        .flex-nowrap();
        .align-items(center);

        > * {
            margin: 0.5em 0.5em;
        }
    }

    .left {
        .justify-content(flex-start);
    }

    .right {
        .justify-content(flex-end);
    }
}

.three-component-bar {
    > * {
        width: 33%;
        min-width: 100px;
        text-align: center;
    }

    > :first-child {
        .display-flex();
        .flex-direction(row);
        .flex-wrap(wrap);
        .align-items(center);
        .justify-content(flex-start);
    }

    > :last-child {
        .display-flex();
        .flex-direction(row);
        .flex-wrap(wrap);
        .align-items(center);
        .justify-content(flex-end);
    }

    .display-flex();
    .flex-direction(row);
    .flex-wrap(wrap);
    .align-items(center);
    .justify-content(center);
}

.fitsize {
    max-height: 60vh;
    max-width: 30vw;
}

.first-blah() {
    > * {
        margin: 1em;
    }

    h5 {
        margin: 0;
    }

    > *:not(:first-child) {
        height: 100%;
        .display-flex;
        text-align: left;
        .flex-direction(column);
        .flex-nowrap();
        .justify-content(center);
    }
}

.first-left {
    .first-blah;

    > :first-child {
        float: left;
    }

}

.first-right {
    .first-blah;

    > :first-child {
        float: right;
    }
}

.window-wide {
    max-width: 650px;
    width: 95%;
    margin: 0 auto;
}

@media (max-width: @nav-collapse-width) {
    #top-bar {
        .flex-direction(column);
        .flex-nowrap();
        .justify-content(center);
        
        > * {
            width: 100%;
        }

        .left, .right {
            .justify-content(center);
        }
    }
}

@media (max-width: @mobile-size) {
    body {
        font-size: 12px;
    }

    section .contents {
        max-width: 95%;
    }
}
